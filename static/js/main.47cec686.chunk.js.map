{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactList/ContactItem/ContactItem.module.css","redux/contact-actions.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","redux/contact-reducer.js","redux/contact-store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","shortid","generate","deleteContact","changeFilter","ContactForm","dispatch","useDispatch","useState","setName","setNumber","nameInputId","numberInputId","handleChange","e","currentTarget","value","className","styles","form","onSubmit","preventDefault","htmlFor","input","type","pattern","title","required","onChange","button","ContactList","contacts","useSelector","state","filter","items","normalizedFilter","toLowerCase","contact","includes","map","onClick","onDeleteContact","Filter","label","App","createReducer","matching","find","alert","_","combineReducers","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","contactReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","devTools","process","persistore","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.47cec686.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__2CNBZ\",\"label\":\"Filter_label__L5MJa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactItem_button__2dR4A\"};","import shortid from \"shortid\";\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\n\r\n// const addContact = ({ name, number }) => ({\r\n//   type: types.ADD,\r\n//   payload: { id: shortid.generate(), name, number },\r\n// });\r\n\r\nexport const addContact = createAction(\"contacts/add\", ({ name, number }) => ({\r\n  payload: {\r\n    id: shortid.generate(),\r\n    name,\r\n    number,\r\n  },\r\n}));\r\n\r\n// const deleteContact = (id) => ({\r\n//   type: types.DELETE,\r\n//   payload: id,\r\n// });\r\n\r\nexport const deleteContact = createAction(\"contacts/delete\");\r\n\r\n// const changeFilter = (value) => ({\r\n//   type: types.CHANGE_FILTER,\r\n//   payload: value,\r\n// });\r\n\r\nexport const changeFilter = createAction(\"contacts/changeFilter\");\r\n\r\n// export default changeFilter;\r\n\r\n// export { addContact, deleteContact, changeFilter };\r\n","import { useState } from \"react\";\nimport shortid from \"shortid\";\nimport styles from \"../ContactForm/ContactForm.module.css\";\n\nimport { useDispatch } from \"react-redux\";\nimport { addContact } from \"../../redux/contact-actions\";\n\nfunction ContactForm() {\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const nameInputId = () => shortid.generate();\n  const numberInputId = () => shortid.generate();\n\n  const handleChange = (e) => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(addContact({ name, number }));\n    resetForm();\n  };\n\n  function resetForm() {\n    setName(\"\");\n    setNumber(\"\");\n  }\n\n  return (\n    <form className={styles.form} onSubmit={handleSubmit}>\n      <label htmlFor={nameInputId}>\n        Name\n        <input\n          className={styles.input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={handleChange}\n          id={nameInputId}\n        />\n      </label>\n      <br />\n      <label htmlFor={numberInputId}>\n        Number\n        <input\n          className={styles.input}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          onChange={handleChange}\n          id={numberInputId}\n        />\n      </label>\n      <br />\n      <button className={styles.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nexport default ContactForm;\n","import React from \"react\";\n\nimport styles from \"../ContactList/ContactItem/ContactItem.module.css\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { deleteContact } from \"../../redux/contact-actions\";\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const onDeleteContact = (id) => dispatch(deleteContact(id));\n\n  const getContactList = (state) => {\n    const { filter, items } = state.contacts;\n    const normalizedFilter = filter.toLowerCase();\n\n    return items.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n  const contacts = useSelector(getContactList);\n\n  return (\n    <ul>\n      {contacts.map(({ id, name, number }) => {\n        return (\n          <li key={id}>\n            {name}: {number}\n            <button\n              className={styles.button}\n              type=\"button\"\n              onClick={() => onDeleteContact(id)}\n            >\n              Delete\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import React from \"react\";\nimport styles from \"../Filter/Filter.module.css\";\nimport { useDispatch } from \"react-redux\";\nimport { changeFilter } from \"../../redux/contact-actions\";\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const onChangeFilter = (e) => dispatch(changeFilter(e.currentTarget.value));\n\n  return (\n    <label className={styles.label}>\n      Find contacts by name\n      <input className={styles.input} type=\"text\" onChange={onChangeFilter} />\n    </label>\n  );\n};\n\nexport default Filter;\n","import ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\n\nfunction App() {\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <Filter />\n      <h2>Contacts</h2>\n      <ContactList />\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport { addContact, deleteContact, changeFilter } from \"./contact-actions\";\r\n\r\nconst items = createReducer([], {\r\n  [addContact]: (state, { payload }) => {\r\n    const matching = state.find(\r\n      (contact) => contact.name.toLowerCase() === payload.name.toLowerCase()\r\n    );\r\n    if (matching) {\r\n      alert(`${matching.name} is already in contacts.`);\r\n      return;\r\n    }\r\n    return [...state, payload];\r\n  },\r\n  [deleteContact]: (state, { payload }) =>\r\n    state.filter((contact) => contact.id !== payload),\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport contactReducer from \"./contact-reducer\";\r\n// import logger from \"redux-logger\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nconst contactsPersistConfig = {\r\n  key: \"contacts\",\r\n  storage,\r\n  blacklist: [\"filter\"],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactsPersistConfig, contactReducer),\r\n  },\r\n  middleware: getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  devTools: process.env.NODE_ENV !== \"production\",\r\n});\r\n\r\nconst persistor = persistStore(store);\r\nconst persistore = { store, persistor };\r\n\r\nexport default persistore;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport store from \"./redux/contact-store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1pxsN\",\"input\":\"ContactForm_input__Bd3lw\",\"button\":\"ContactForm_button__1lv7J\"};"],"sourceRoot":""}